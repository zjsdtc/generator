package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};

import ${superServiceImplClassPackage};
import org.springframework.stereotype.Service;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import com.ctsec.dzsw.core.util.BeanCopyUtils;
import java.time.LocalDateTime;
import ${package.DTO}.${entity}DTO;
/**
 * $!{table.comment}(${entity})服务接口实现类
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
@Service("${table.firstCharToLower(${table.serviceName})}")
@RequiredArgsConstructor(onConstructor = @__(@Autowired))
public class ${table.serviceName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}>  {

    /**
    * 新增记录
    *
    * @param dto 信息
    * @return 主键
    */
    @Transactional(rollbackFor = Exception.class)
    public Long add${entity}(${entity}DTO dto) {
        ${entity} entity = BeanCopyUtils.copy(dto, ${entity}.class);
        entity.setCreateTime(LocalDateTime.now());
        this.save(entity);
        return entity.getId();
    }

    /**
     * 根据id删除
     *
     * @param id 主键
     * @return 影响行数
     */
    @Transactional(rollbackFor = Exception.class)
    public Integer delete${entity}(Long id) {
        int count = baseMapper.deleteById(id);
        return count;
    }

    /**
     * 修改信息
     *
     * @param dto 信息
     * @return successFlag
     */
    @Transactional(rollbackFor = Exception.class)
    public Boolean update${entity}(${entity}DTO dto) {
        ${entity} entity = BeanCopyUtils.copy(dto, ${entity}.class);
        entity.setUpdateTime(LocalDateTime.now());
        Boolean result = this.updateById(entity);
        return result;
    }
}

